# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=dness

matrix:
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu NO_EXEC_TESTS=1
    - env: TARGET=arm-unknown-linux-gnueabi NO_EXEC_TESTS=1
    - env: TARGET=armv7-unknown-linux-gnueabihf NO_EXEC_TESTS=1
    - env: TARGET=mips-unknown-linux-gnu NO_EXEC_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # build / test on rust stable deploy with debian packaging
    - env: DEBIAN_PACKAGING=1

    # Testing other channels
    - rust: nightly
    - rust: beta

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "trYPEznGYPscNJlzrX8NflR/UKa6Hfkq/hQooH8jiWL9CIlw0ZrIGWphUx5O/nyvb+5mbO6XDMfOTsxLHWb8GXuAZreGsUWw5j3H6U88QvQN/JlZxUa/y95l3Nkd+EV2RYuou8uiw7aG7eTysk0OMyC55fcqjxbJCbe3vx3qFCLFDkUXHNuOERcoVfr6pnwz+YvevBO6HNjxn8fKil3mGF+aOt2L4ILJk+QFlpPJh1UKLYW/k9kKc01+0O7+zlWE2JlwiqM8G97NOHC+LKtapovdsxKPQ4eCijTf6OGmROEEf3mON9o0szExwiLHSoFw3HkRc6IzSyj2nOXdLn8GHUTYcFEVQxqrLvLLYRPkumybsgxQ6+iOQYAGIURKcGbU2Zpi/lOzE4tOifSqWOYBPYAEtw99AcpfM7CpW/s4qL56NoWk/Guuamq5jU50gMtwFbC3WF06FZia8uvguJvL7A4jjzRdPlJVrjo5F916u3CORkM4Z8OFZPSiYW8MsfWB2fUwspiiuNQnCuctLyiDXq8ngf+KKO6peE8MiX802+qAVLfveXp6J3v1Z/QzOH9P/PkjLW1+NEqL4vsTW/np173Fj6Ul2Ts1/I3PtZK8l2IvpfQynLxjcqV3VPvt5RaOon5ONwaXIr8HS45prSffdbEp6A0jhSnlZ1imef2rE/8="

  file_glob: true
  file:
    - $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
    - $CRATE_NAME*.deb
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
